{"ast":null,"code":"import _objectSpread from \"/Users/willtrotman/Documents/GitHub/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/willtrotman/Documents/GitHub/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/willtrotman/Documents/GitHub/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport { useState } from \"react\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      fishes = _useState2[0],\n      setFishes = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      order = _useState4[0],\n      setOrder = _useState4[1];\n\n  function addFish(fish) {\n    // 1. Take a copy of the existing state\n    var fishes = _objectSpread({}, state.fishes); // 2. Add our new fish to that fishes variable\n\n\n    fishes[\"fish\".concat(Date.now())] = fish; // 3. Set the new fishes object to state\n\n    setFishes(fishes);\n  }\n\n  function loadSampleFishes() {\n    setState({\n      fishes: sampleFishes\n    });\n  }\n\n  function addToOrder(key) {\n    // 1. Take a copy of state\n    var order = _objectSpread({}, state.order);\n\n    console.log(\"Step 1: Working\"); // 2. Either add to the order, or update the number in our order\n\n    order[key] = order[key] + 1 || 1;\n    console.log(\"Step 2: Working\"); // 3. Call setState to update our state object\n\n    setState({\n      order\n    });\n    console.log(\"Step 3: Working\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"catch-of-the-day\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        tagline: \"Fresh Seafood Market\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"fishes\",\n        children: Object.keys(state.fishes).map(function (key) {\n          return /*#__PURE__*/_jsxDEV(Fish, {\n            index: key,\n            details: state.fishes[key],\n            addToOrder: addToOrder\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inventory, {\n      addFish: addFish,\n      loadSampleFishes: loadSampleFishes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IBtkhZ/thEADfD2lLK3wMb1Qock=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/willtrotman/Documents/GitHub/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","useState","sampleFishes","Fish","App","fishes","setFishes","order","setOrder","addFish","fish","state","Date","now","loadSampleFishes","setState","addToOrder","key","console","log","Object","keys","map"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AACb,kBAA4BH,QAAQ,EAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA0BL,QAAQ,EAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,WAASC,OAAT,CAAiBC,IAAjB,EAAuB;AACrB;AACA,QAAML,MAAM,qBAAQM,KAAK,CAACN,MAAd,CAAZ,CAFqB,CAGrB;;;AACAA,IAAAA,MAAM,eAAQO,IAAI,CAACC,GAAL,EAAR,EAAN,GAA8BH,IAA9B,CAJqB,CAKrB;;AACAJ,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD;;AACD,WAASS,gBAAT,GAA4B;AAC1BC,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,MAAM,EAAEH;AAAV,KAAD,CAAR;AACD;;AACD,WAASc,UAAT,CAAoBC,GAApB,EAAyB;AACvB;AACA,QAAMV,KAAK,qBAAQI,KAAK,CAACJ,KAAd,CAAX;;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAHuB,CAIvB;;AACAZ,IAAAA,KAAK,CAACU,GAAD,CAAL,GAAaV,KAAK,CAACU,GAAD,CAAL,GAAa,CAAb,IAAkB,CAA/B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EANuB,CAOvB;;AACAJ,IAAAA,QAAQ,CAAC;AAAER,MAAAA;AAAF,KAAD,CAAR;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA,kBACGC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACN,MAAlB,EAA0BiB,GAA1B,CAA8B,UAACL,GAAD,EAAS;AACtC,8BACE,QAAC,IAAD;AAEE,YAAA,KAAK,EAAEA,GAFT;AAGE,YAAA,OAAO,EAAEN,KAAK,CAACN,MAAN,CAAaY,GAAb,CAHX;AAIE,YAAA,UAAU,EAAED;AAJd,aACOC,GADP;AAAA;AAAA;AAAA;AAAA,mBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAER,OAApB;AAA6B,MAAA,gBAAgB,EAAEK;AAA/C;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAhDQV,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport { useState } from \"react\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\n\nfunction App() {\n  const [fishes, setFishes] = useState();\n  const [order, setOrder] = useState();\n  function addFish(fish) {\n    // 1. Take a copy of the existing state\n    const fishes = { ...state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    setFishes(fishes);\n  }\n  function loadSampleFishes() {\n    setState({ fishes: sampleFishes });\n  }\n  function addToOrder(key) {\n    // 1. Take a copy of state\n    const order = { ...state.order };\n    console.log(\"Step 1: Working\");\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    console.log(\"Step 2: Working\");\n    // 3. Call setState to update our state object\n    setState({ order });\n    console.log(\"Step 3: Working\");\n  }\n\n  return (\n    <div className=\"catch-of-the-day\">\n      <div className=\"menu\">\n        <Header tagline=\"Fresh Seafood Market\" />\n        <ul className=\"fishes\">\n          {Object.keys(state.fishes).map((key) => {\n            return (\n              <Fish\n                key={key}\n                index={key}\n                details={state.fishes[key]}\n                addToOrder={addToOrder}\n              />\n            );\n          })}\n        </ul>\n      </div>\n\n      <Order />\n      <Inventory addFish={addFish} loadSampleFishes={loadSampleFishes} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}